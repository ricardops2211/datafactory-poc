name: Azure desde vault1

on:
  push:
    branches:
      - datafactory-1

jobs:
  azure-login:
    runs-on: self-hosted # Etiquetas de tu runner, ajusta si la etiqueta es distinta
    steps:
      # 1. Checkout del código
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Configurar variables de Vault
      - name: Configurar entorno Vault
        shell: powershell
        run: |
          $env:VAULT_ADDR = "${{ secrets.VAULT_ADDR }}"
          $env:VAULT_TOKEN = "${{ secrets.VAULT_TOKEN }}"

      # 3. Obtener credenciales desde Vault y conectarse a Azure
      - name: Obtener credenciales desde Vault
        run: |
          vault kv get -format=json secret/azure-creds > azure-creds.json
          export ARM_CLIENT_ID=$(jq -r '.data.data.ARM_CLIENT_ID' azure-creds.json)
          export ARM_CLIENT_SECRET=$(jq -r '.data.data.ARM_CLIENT_SECRET' azure-creds.json)
          export ARM_SUBSCRIPTION_ID=$(jq -r '.data.data.ARM_SUBSCRIPTION_ID' azure-creds.json)
          export ARM_TENANT_ID=$(jq -r '.data.data.ARM_TENANT_ID' azure-creds.json)

          echo "ARM_CLIENT_ID=$ARM_CLIENT_ID" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$ARM_TENANT_ID" >> $GITHUB_ENV
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}

      - name: Login en Azure
        run: |
          az login --service-principal \
            --username $ARM_CLIENT_ID \
            --password $ARM_CLIENT_SECRET \
            --tenant $ARM_TENANT_ID

      - name: Verificar suscripción
        run: |
          az account show
          az group list --output table